/*
 * E. Кафе
 *
 * ограничение по времени на тест 2 секунды
 * ограничение по памяти на тест 64 мегабайта
 * ввод стандартный ввод
 * вывод стандартный вывод
 *
 * Около Петиного университета недавно открылось новое кафе, в котором действует следующая система скидок:
 * при каждой покупке более чем на 100 рублей покупатель получает купон, дающий право на один бесплатный обед
 * (при покупке на сумму 100 рублей и меньше такой купон покупатель не получает).
 * Однажды Пете на глаза попался прейскурант на ближайшие n дней. Внимательно его изучив, он решил,
 * что будет обедать в этом кафе все n дней, причем каждый день он будет покупать в кафе ровно один обед.
 * Однако стипендия у Пети небольшая, и поэтому он хочет по максимуму использовать предоставляемую систему скидок так,
 * чтобы его суммарные затраты были минимальны. Требуется найти минимально возможную суммарную стоимость
 * обедов и номера дней, в которые Пете следует воспользоваться купонами.
 *
 * Входные данные
 * В первой строке входного файла записано целое число n (0 ≤ n ≤ 100).
 * В каждой из последующих n строк записано одно целое число, обозначающее стоимость обеда
 * в рублях на соответствующий день. Стоимость — неотрицательное целое число, не превосходящее 300.
 * Выходные данные
 * В первой строке выдайте минимальную возможную суммарную стоимость обедов.
 * Во второй строке выдайте два числа k1 и k2 — количество купонов, которые останутся неиспользованными у
 * Пети после этих n дней и количество использованных им купонов соответственно.
 * В последующих k2 строках выдайте в возрастающем порядке номера дней, когда Пете следует воспользоваться купонами.
 * Если существует несколько решений с минимальной суммарной стоимостью, то выдайте то из них,
 * в котором значение k1 максимально (на случай, если Петя когда-нибудь ещё решит заглянуть в это кафе).
 * Если таких решений несколько, выведите любое из них.
 *
 * Примеры
 * Входные данные
 * 5
 * 110
 * 40
 * 120
 * 110
 * 60
 * Выходные данные
 * 260
 * 0 2
 * 3
 * 5
 *
 * Входные данные
 * 3
 * 110
 * 110
 * 110
 * Выходные данные
 * 220
 * 1 1
 * 2
 */

 /*
  * Что храним?
  * База
  * Переход
  * Порядок
  * Ответ
  */

#include <iostream>
#include <vector>
#include <algorithm>
 

int main(int argc, char *argv[]) {
    // Чтение входных данных

    // Запись результата

    return 0;
}