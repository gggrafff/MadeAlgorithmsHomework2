/*
 * B. Дуэль
 * ограничение по времени на тест 2 секунды
 * ограничение по памяти на тест 256 мегабайт
 * ввод стандартный ввод
 * вывод стандартный вывод
 *
 * Двое дуэлянтов решили выбрать в качестве места проведения поединка тёмную аллею.
 * Вдоль этой аллеи растёт n деревьев и кустов. Расстояние между соседними объектами равно одному метру.
 * Дуэль решили проводить по следующим правилам. Некоторое дерево выбирается в качестве стартовой точки.
 * Затем два дерева, находящихся на одинаковом расстоянии от исходного, отмечаются как места для стрельбы.
 * Дуэлянты начинают движение от стартовой точки в противоположных направлениях.
 * Когда соперники достигают отмеченных деревьев, они разворачиваются и начинают стрелять друг в друга.
 *
 * Дана схема расположения деревьев вдоль аллеи.
 * Требуется определить количество способов выбрать стартовую точку и места для стрельбы согласно правилам дуэли.
 *
 * Входные данные
 * Во входном файле содержится одна строка, состоящая из символов '0' и '1' — схема аллеи.
 * Деревья обозначаются символом '1', кусты — символом '0'.
 * Длина строки не превосходит 100000 символов.
 *
 * Выходные данные
 * Выведите количество способов выбрать стартовую точку и места для стрельбы согласно правилам дуэли.
 *
 * Примеры
 * Входные данные
 * 101010101
 * Выходные данные
 * 4
 *
 * Входные данные
 * 101001
 * Выходные данные
 * 0
 *
 * Примечание
 * В первом примере возможны следующие конфигурации дуэли (стартовое дерево и деревья для стрельбы выделены
 * жирным шрифтом): (1)0(1)0(1)0101, 10(1)0(1)0(1)01, 1010(1)0(1)0(1) и (1)010(1)010(1).
 */

/*
 * Подробнее о:
 *
 */


#include <random>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <array>
#include <utility>
#include <iomanip>
#include <optional>


// Начало тестов

void test_from_task() {

}


void run_all_tests() {
    test_from_task();
}

// Конец тестов

int main(int argc, char *argv[]) {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    if (argc > 1) {
        if (std::string(argv[1]) == "test")  // запуск тестов
        {
            run_all_tests();
            return 0;
        }
    }

    // Решение задачи
    

    return 0;
}
