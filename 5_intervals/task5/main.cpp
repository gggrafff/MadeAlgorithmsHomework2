/*
 * E. Криптография
 * ограничение по времени на тест 2 секунды
 * ограничение по памяти на тест 256 мегабайт
 * ввод crypto.in
 * вывод crypto.out
 *
 * Задано n матриц A1, A2, ..., An размера 2 × 2.
 * Необходимо для нескольких запросов вычислить произведение матриц Ai, Ai + 1, ..., Aj.
 * Все вычисления производятся по модулю r.
 *
 * Входные данные
 * Первая строка входного файла содержит числа r (1 ≤ r ≤ 10 000), n (1 ≤ n ≤ 200 000) и m (1 ≤ m ≤ 200 000).
 * Следующие n блоков по две строки содержащие по два числа в строке — описания матриц.
 * Затем следуют m пар целых чисел от 1 до n, запросы на произведение на отрезке.
 * Выходные данные
 * Выведите m блоков по две строки,по два числа в каждой — произведения на отрезках.
 * Разделяйте блоки пустой строкой. Все вычисления производятся по модулю r
 * Пример
 * Входные данные
 * 3 4 4
 * 0 1
 * 0 0
 *
 * 2 1
 * 1 2
 *
 * 0 0
 * 0 2
 *
 * 1 0
 * 0 2
 *
 * 1 4
 * 2 3
 * 1 3
 * 2 2
 *
 * Выходные данные
 * 0 2
 * 0 0
 *
 * 0 2
 * 0 1
 *
 * 0 1
 * 0 0
 *
 * 2 1
 * 1 2
 */

#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>
#include <cmath>



// Начало тестов

void test_from_task() {

}

void run_all_tests() {
    test_from_task();
}

// Конец тестов

int main(int argc, char *argv[]) {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    if (argc > 1) {
        if (std::string(argv[1]) == "test")  // запуск тестов
        {
            run_all_tests();
            return 0;
        }
    }

    // Чтение входных данных


    // Запись результата


    return 0;
}