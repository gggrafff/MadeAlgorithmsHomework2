/*
 * E. Замощение доминошками
 * ограничение по времени на тест 1 секунда
 * ограничение по памяти на тест 256 мегабайт
 * ввод стандартный ввод
 * вывод стандартный вывод

 * Вам дана прямоугольная сетка из квадратных ячеек.
 * Символ 'X' представляет собой уже покрытую ячейку, символ '.' - это ячейка, которую еще нужно покрыть.
 * Вы хотите покрыть все ячейки '.', непересекающимися доминошками 2×1.
 * Найдите количество способов сделать это. Два способа считаются различными,
 * если две ячейки покрыты одним и тем же домино в одном замощении и двумя разными домино в другом замощении.
 *
 * Входные данные
 * Первая строка содержит числа n и m (1≤n,m≤12). Следующие n строк содержат по m символов — описание доски.
 * Выходные данные
 * Выведите число замощений доминошками.
 *
 * Примеры
 * Входные данные
 * 2 2
 * ..
 * ..
 * Выходные данные
 * 2
 *
 * Входные данные
 * 3 3
 * ...
 * .X.
 * ...
 * Выходные данные
 * 2
 *
 * Входные данные
 * 3 3
 * ...
 * ...
 * ..X
 * Выходные данные
 * 4
 */

/*
 * Что храним?
 * База
 * Переход
 * Порядок
 * Ответ
 */

#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>


// Начало тестов

void test_from_task_1() {

}

void run_all_tests()
{
    test_from_task_1();
}

// Конец тестов

int main(int argc, char *argv[]) {
    if (argc > 1)
    {
        if(std::string(argv[1]) == "test")  // запуск тестов
        {
            run_all_tests();
            return 0;
        }
    }

    // Чтение входных данных



    // Запись результата

    return 0;
}